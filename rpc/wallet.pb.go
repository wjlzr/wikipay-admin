// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wallet.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UnspentBalanceRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Address              []string `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnspentBalanceRequest) Reset()         { *m = UnspentBalanceRequest{} }
func (m *UnspentBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*UnspentBalanceRequest) ProtoMessage()    {}
func (*UnspentBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{0}
}

func (m *UnspentBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnspentBalanceRequest.Unmarshal(m, b)
}
func (m *UnspentBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnspentBalanceRequest.Marshal(b, m, deterministic)
}
func (m *UnspentBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnspentBalanceRequest.Merge(m, src)
}
func (m *UnspentBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_UnspentBalanceRequest.Size(m)
}
func (m *UnspentBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnspentBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnspentBalanceRequest proto.InternalMessageInfo

func (m *UnspentBalanceRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *UnspentBalanceRequest) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type UnspentBalanceReply struct {
	Accounts             []*CoinAccount `protobuf:"bytes,1,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UnspentBalanceReply) Reset()         { *m = UnspentBalanceReply{} }
func (m *UnspentBalanceReply) String() string { return proto.CompactTextString(m) }
func (*UnspentBalanceReply) ProtoMessage()    {}
func (*UnspentBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{1}
}

func (m *UnspentBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnspentBalanceReply.Unmarshal(m, b)
}
func (m *UnspentBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnspentBalanceReply.Marshal(b, m, deterministic)
}
func (m *UnspentBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnspentBalanceReply.Merge(m, src)
}
func (m *UnspentBalanceReply) XXX_Size() int {
	return xxx_messageInfo_UnspentBalanceReply.Size(m)
}
func (m *UnspentBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UnspentBalanceReply.DiscardUnknown(m)
}

var xxx_messageInfo_UnspentBalanceReply proto.InternalMessageInfo

func (m *UnspentBalanceReply) GetAccounts() []*CoinAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type FundedSendRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	FromAddress          string   `protobuf:"bytes,2,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress            string   `protobuf:"bytes,3,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Amount               string   `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	FeeAddress           string   `protobuf:"bytes,5,opt,name=feeAddress,proto3" json:"feeAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FundedSendRequest) Reset()         { *m = FundedSendRequest{} }
func (m *FundedSendRequest) String() string { return proto.CompactTextString(m) }
func (*FundedSendRequest) ProtoMessage()    {}
func (*FundedSendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{2}
}

func (m *FundedSendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundedSendRequest.Unmarshal(m, b)
}
func (m *FundedSendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundedSendRequest.Marshal(b, m, deterministic)
}
func (m *FundedSendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundedSendRequest.Merge(m, src)
}
func (m *FundedSendRequest) XXX_Size() int {
	return xxx_messageInfo_FundedSendRequest.Size(m)
}
func (m *FundedSendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FundedSendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FundedSendRequest proto.InternalMessageInfo

func (m *FundedSendRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *FundedSendRequest) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *FundedSendRequest) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *FundedSendRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *FundedSendRequest) GetFeeAddress() string {
	if m != nil {
		return m.FeeAddress
	}
	return ""
}

type FundedSendReply struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FundedSendReply) Reset()         { *m = FundedSendReply{} }
func (m *FundedSendReply) String() string { return proto.CompactTextString(m) }
func (*FundedSendReply) ProtoMessage()    {}
func (*FundedSendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{3}
}

func (m *FundedSendReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundedSendReply.Unmarshal(m, b)
}
func (m *FundedSendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundedSendReply.Marshal(b, m, deterministic)
}
func (m *FundedSendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundedSendReply.Merge(m, src)
}
func (m *FundedSendReply) XXX_Size() int {
	return xxx_messageInfo_FundedSendReply.Size(m)
}
func (m *FundedSendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FundedSendReply.DiscardUnknown(m)
}

var xxx_messageInfo_FundedSendReply proto.InternalMessageInfo

func (m *FundedSendReply) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type CurrencyRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrencyRequest) Reset()         { *m = CurrencyRequest{} }
func (m *CurrencyRequest) String() string { return proto.CompactTextString(m) }
func (*CurrencyRequest) ProtoMessage()    {}
func (*CurrencyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{4}
}

func (m *CurrencyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyRequest.Unmarshal(m, b)
}
func (m *CurrencyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyRequest.Marshal(b, m, deterministic)
}
func (m *CurrencyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyRequest.Merge(m, src)
}
func (m *CurrencyRequest) XXX_Size() int {
	return xxx_messageInfo_CurrencyRequest.Size(m)
}
func (m *CurrencyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyRequest proto.InternalMessageInfo

func (m *CurrencyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CurrencyReply struct {
	Price                float64  `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrencyReply) Reset()         { *m = CurrencyReply{} }
func (m *CurrencyReply) String() string { return proto.CompactTextString(m) }
func (*CurrencyReply) ProtoMessage()    {}
func (*CurrencyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{5}
}

func (m *CurrencyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyReply.Unmarshal(m, b)
}
func (m *CurrencyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyReply.Marshal(b, m, deterministic)
}
func (m *CurrencyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyReply.Merge(m, src)
}
func (m *CurrencyReply) XXX_Size() int {
	return xxx_messageInfo_CurrencyReply.Size(m)
}
func (m *CurrencyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyReply.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyReply proto.InternalMessageInfo

func (m *CurrencyReply) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type UsdPriceRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsdPriceRequest) Reset()         { *m = UsdPriceRequest{} }
func (m *UsdPriceRequest) String() string { return proto.CompactTextString(m) }
func (*UsdPriceRequest) ProtoMessage()    {}
func (*UsdPriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{6}
}

func (m *UsdPriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsdPriceRequest.Unmarshal(m, b)
}
func (m *UsdPriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsdPriceRequest.Marshal(b, m, deterministic)
}
func (m *UsdPriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsdPriceRequest.Merge(m, src)
}
func (m *UsdPriceRequest) XXX_Size() int {
	return xxx_messageInfo_UsdPriceRequest.Size(m)
}
func (m *UsdPriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UsdPriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UsdPriceRequest proto.InternalMessageInfo

func (m *UsdPriceRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

type UsdPriceReply struct {
	Price                float64  `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsdPriceReply) Reset()         { *m = UsdPriceReply{} }
func (m *UsdPriceReply) String() string { return proto.CompactTextString(m) }
func (*UsdPriceReply) ProtoMessage()    {}
func (*UsdPriceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{7}
}

func (m *UsdPriceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsdPriceReply.Unmarshal(m, b)
}
func (m *UsdPriceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsdPriceReply.Marshal(b, m, deterministic)
}
func (m *UsdPriceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsdPriceReply.Merge(m, src)
}
func (m *UsdPriceReply) XXX_Size() int {
	return xxx_messageInfo_UsdPriceReply.Size(m)
}
func (m *UsdPriceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UsdPriceReply.DiscardUnknown(m)
}

var xxx_messageInfo_UsdPriceReply proto.InternalMessageInfo

func (m *UsdPriceReply) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type NetworkInfoRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInfoRequest) Reset()         { *m = NetworkInfoRequest{} }
func (m *NetworkInfoRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkInfoRequest) ProtoMessage()    {}
func (*NetworkInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{8}
}

func (m *NetworkInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInfoRequest.Unmarshal(m, b)
}
func (m *NetworkInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInfoRequest.Marshal(b, m, deterministic)
}
func (m *NetworkInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInfoRequest.Merge(m, src)
}
func (m *NetworkInfoRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkInfoRequest.Size(m)
}
func (m *NetworkInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInfoRequest proto.InternalMessageInfo

func (m *NetworkInfoRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

type NetworkInfoReply struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Active               bool     `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	Warnings             string   `protobuf:"bytes,3,opt,name=warnings,proto3" json:"warnings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInfoReply) Reset()         { *m = NetworkInfoReply{} }
func (m *NetworkInfoReply) String() string { return proto.CompactTextString(m) }
func (*NetworkInfoReply) ProtoMessage()    {}
func (*NetworkInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{9}
}

func (m *NetworkInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInfoReply.Unmarshal(m, b)
}
func (m *NetworkInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInfoReply.Marshal(b, m, deterministic)
}
func (m *NetworkInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInfoReply.Merge(m, src)
}
func (m *NetworkInfoReply) XXX_Size() int {
	return xxx_messageInfo_NetworkInfoReply.Size(m)
}
func (m *NetworkInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInfoReply proto.InternalMessageInfo

func (m *NetworkInfoReply) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *NetworkInfoReply) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *NetworkInfoReply) GetWarnings() string {
	if m != nil {
		return m.Warnings
	}
	return ""
}

type AccountAndBalanceRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountAndBalanceRequest) Reset()         { *m = AccountAndBalanceRequest{} }
func (m *AccountAndBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*AccountAndBalanceRequest) ProtoMessage()    {}
func (*AccountAndBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{10}
}

func (m *AccountAndBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountAndBalanceRequest.Unmarshal(m, b)
}
func (m *AccountAndBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountAndBalanceRequest.Marshal(b, m, deterministic)
}
func (m *AccountAndBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAndBalanceRequest.Merge(m, src)
}
func (m *AccountAndBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_AccountAndBalanceRequest.Size(m)
}
func (m *AccountAndBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAndBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAndBalanceRequest proto.InternalMessageInfo

func (m *AccountAndBalanceRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

type AccountAndBalanceReply struct {
	Accounts             []*CoinAccount `protobuf:"bytes,1,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AccountAndBalanceReply) Reset()         { *m = AccountAndBalanceReply{} }
func (m *AccountAndBalanceReply) String() string { return proto.CompactTextString(m) }
func (*AccountAndBalanceReply) ProtoMessage()    {}
func (*AccountAndBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{11}
}

func (m *AccountAndBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountAndBalanceReply.Unmarshal(m, b)
}
func (m *AccountAndBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountAndBalanceReply.Marshal(b, m, deterministic)
}
func (m *AccountAndBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAndBalanceReply.Merge(m, src)
}
func (m *AccountAndBalanceReply) XXX_Size() int {
	return xxx_messageInfo_AccountAndBalanceReply.Size(m)
}
func (m *AccountAndBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAndBalanceReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAndBalanceReply proto.InternalMessageInfo

func (m *AccountAndBalanceReply) GetAccounts() []*CoinAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type CoinAccount struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance              float64  `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoinAccount) Reset()         { *m = CoinAccount{} }
func (m *CoinAccount) String() string { return proto.CompactTextString(m) }
func (*CoinAccount) ProtoMessage()    {}
func (*CoinAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{12}
}

func (m *CoinAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinAccount.Unmarshal(m, b)
}
func (m *CoinAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinAccount.Marshal(b, m, deterministic)
}
func (m *CoinAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinAccount.Merge(m, src)
}
func (m *CoinAccount) XXX_Size() int {
	return xxx_messageInfo_CoinAccount.Size(m)
}
func (m *CoinAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinAccount.DiscardUnknown(m)
}

var xxx_messageInfo_CoinAccount proto.InternalMessageInfo

func (m *CoinAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CoinAccount) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type BalanceRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalanceRequest) Reset()         { *m = BalanceRequest{} }
func (m *BalanceRequest) String() string { return proto.CompactTextString(m) }
func (*BalanceRequest) ProtoMessage()    {}
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{13}
}

func (m *BalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceRequest.Unmarshal(m, b)
}
func (m *BalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceRequest.Marshal(b, m, deterministic)
}
func (m *BalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceRequest.Merge(m, src)
}
func (m *BalanceRequest) XXX_Size() int {
	return xxx_messageInfo_BalanceRequest.Size(m)
}
func (m *BalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceRequest proto.InternalMessageInfo

func (m *BalanceRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *BalanceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type BalanceReply struct {
	Balance              float64  `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalanceReply) Reset()         { *m = BalanceReply{} }
func (m *BalanceReply) String() string { return proto.CompactTextString(m) }
func (*BalanceReply) ProtoMessage()    {}
func (*BalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{14}
}

func (m *BalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceReply.Unmarshal(m, b)
}
func (m *BalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceReply.Marshal(b, m, deterministic)
}
func (m *BalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceReply.Merge(m, src)
}
func (m *BalanceReply) XXX_Size() int {
	return xxx_messageInfo_BalanceReply.Size(m)
}
func (m *BalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceReply.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceReply proto.InternalMessageInfo

func (m *BalanceReply) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type AccountsRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountsRequest) Reset()         { *m = AccountsRequest{} }
func (m *AccountsRequest) String() string { return proto.CompactTextString(m) }
func (*AccountsRequest) ProtoMessage()    {}
func (*AccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{15}
}

func (m *AccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsRequest.Unmarshal(m, b)
}
func (m *AccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsRequest.Marshal(b, m, deterministic)
}
func (m *AccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsRequest.Merge(m, src)
}
func (m *AccountsRequest) XXX_Size() int {
	return xxx_messageInfo_AccountsRequest.Size(m)
}
func (m *AccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsRequest proto.InternalMessageInfo

func (m *AccountsRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

type AccountsReply struct {
	Accounts             []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountsReply) Reset()         { *m = AccountsReply{} }
func (m *AccountsReply) String() string { return proto.CompactTextString(m) }
func (*AccountsReply) ProtoMessage()    {}
func (*AccountsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{16}
}

func (m *AccountsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsReply.Unmarshal(m, b)
}
func (m *AccountsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsReply.Marshal(b, m, deterministic)
}
func (m *AccountsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsReply.Merge(m, src)
}
func (m *AccountsReply) XXX_Size() int {
	return xxx_messageInfo_AccountsReply.Size(m)
}
func (m *AccountsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsReply proto.InternalMessageInfo

func (m *AccountsReply) GetAccounts() []string {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type AddressRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=Coin,proto3" json:"Coin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressRequest) Reset()         { *m = AddressRequest{} }
func (m *AddressRequest) String() string { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()    {}
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{17}
}

func (m *AddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressRequest.Unmarshal(m, b)
}
func (m *AddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressRequest.Marshal(b, m, deterministic)
}
func (m *AddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressRequest.Merge(m, src)
}
func (m *AddressRequest) XXX_Size() int {
	return xxx_messageInfo_AddressRequest.Size(m)
}
func (m *AddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressRequest proto.InternalMessageInfo

func (m *AddressRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

type AddressReply struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressReply) Reset()         { *m = AddressReply{} }
func (m *AddressReply) String() string { return proto.CompactTextString(m) }
func (*AddressReply) ProtoMessage()    {}
func (*AddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{18}
}

func (m *AddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressReply.Unmarshal(m, b)
}
func (m *AddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressReply.Marshal(b, m, deterministic)
}
func (m *AddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressReply.Merge(m, src)
}
func (m *AddressReply) XXX_Size() int {
	return xxx_messageInfo_AddressReply.Size(m)
}
func (m *AddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddressReply proto.InternalMessageInfo

func (m *AddressReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ValidateAddressRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=Coin,proto3" json:"Coin,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateAddressRequest) Reset()         { *m = ValidateAddressRequest{} }
func (m *ValidateAddressRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateAddressRequest) ProtoMessage()    {}
func (*ValidateAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{19}
}

func (m *ValidateAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateAddressRequest.Unmarshal(m, b)
}
func (m *ValidateAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateAddressRequest.Marshal(b, m, deterministic)
}
func (m *ValidateAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateAddressRequest.Merge(m, src)
}
func (m *ValidateAddressRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateAddressRequest.Size(m)
}
func (m *ValidateAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateAddressRequest proto.InternalMessageInfo

func (m *ValidateAddressRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *ValidateAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ValidateAddressReply struct {
	Status               bool     `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateAddressReply) Reset()         { *m = ValidateAddressReply{} }
func (m *ValidateAddressReply) String() string { return proto.CompactTextString(m) }
func (*ValidateAddressReply) ProtoMessage()    {}
func (*ValidateAddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{20}
}

func (m *ValidateAddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateAddressReply.Unmarshal(m, b)
}
func (m *ValidateAddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateAddressReply.Marshal(b, m, deterministic)
}
func (m *ValidateAddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateAddressReply.Merge(m, src)
}
func (m *ValidateAddressReply) XXX_Size() int {
	return xxx_messageInfo_ValidateAddressReply.Size(m)
}
func (m *ValidateAddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateAddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateAddressReply proto.InternalMessageInfo

func (m *ValidateAddressReply) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

//提现
type WithdrawRequest struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=Coin,proto3" json:"Coin,omitempty"`
	Amount               float64  `protobuf:"fixed64,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	FromAddress          string   `protobuf:"bytes,3,opt,name=FromAddress,proto3" json:"FromAddress,omitempty"`
	ToAddress            string   `protobuf:"bytes,4,opt,name=ToAddress,proto3" json:"ToAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawRequest) Reset()         { *m = WithdrawRequest{} }
func (m *WithdrawRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawRequest) ProtoMessage()    {}
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{21}
}

func (m *WithdrawRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawRequest.Unmarshal(m, b)
}
func (m *WithdrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawRequest.Marshal(b, m, deterministic)
}
func (m *WithdrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawRequest.Merge(m, src)
}
func (m *WithdrawRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawRequest.Size(m)
}
func (m *WithdrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawRequest proto.InternalMessageInfo

func (m *WithdrawRequest) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *WithdrawRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *WithdrawRequest) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *WithdrawRequest) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

type WithdrawReply struct {
	Txid                 string   `protobuf:"bytes,1,opt,name=Txid,proto3" json:"Txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawReply) Reset()         { *m = WithdrawReply{} }
func (m *WithdrawReply) String() string { return proto.CompactTextString(m) }
func (*WithdrawReply) ProtoMessage()    {}
func (*WithdrawReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{22}
}

func (m *WithdrawReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawReply.Unmarshal(m, b)
}
func (m *WithdrawReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawReply.Marshal(b, m, deterministic)
}
func (m *WithdrawReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawReply.Merge(m, src)
}
func (m *WithdrawReply) XXX_Size() int {
	return xxx_messageInfo_WithdrawReply.Size(m)
}
func (m *WithdrawReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawReply.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawReply proto.InternalMessageInfo

func (m *WithdrawReply) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func init() {
	proto.RegisterType((*UnspentBalanceRequest)(nil), "rpc.UnspentBalanceRequest")
	proto.RegisterType((*UnspentBalanceReply)(nil), "rpc.UnspentBalanceReply")
	proto.RegisterType((*FundedSendRequest)(nil), "rpc.FundedSendRequest")
	proto.RegisterType((*FundedSendReply)(nil), "rpc.FundedSendReply")
	proto.RegisterType((*CurrencyRequest)(nil), "rpc.CurrencyRequest")
	proto.RegisterType((*CurrencyReply)(nil), "rpc.CurrencyReply")
	proto.RegisterType((*UsdPriceRequest)(nil), "rpc.UsdPriceRequest")
	proto.RegisterType((*UsdPriceReply)(nil), "rpc.UsdPriceReply")
	proto.RegisterType((*NetworkInfoRequest)(nil), "rpc.NetworkInfoRequest")
	proto.RegisterType((*NetworkInfoReply)(nil), "rpc.NetworkInfoReply")
	proto.RegisterType((*AccountAndBalanceRequest)(nil), "rpc.AccountAndBalanceRequest")
	proto.RegisterType((*AccountAndBalanceReply)(nil), "rpc.AccountAndBalanceReply")
	proto.RegisterType((*CoinAccount)(nil), "rpc.CoinAccount")
	proto.RegisterType((*BalanceRequest)(nil), "rpc.BalanceRequest")
	proto.RegisterType((*BalanceReply)(nil), "rpc.BalanceReply")
	proto.RegisterType((*AccountsRequest)(nil), "rpc.AccountsRequest")
	proto.RegisterType((*AccountsReply)(nil), "rpc.AccountsReply")
	proto.RegisterType((*AddressRequest)(nil), "rpc.AddressRequest")
	proto.RegisterType((*AddressReply)(nil), "rpc.AddressReply")
	proto.RegisterType((*ValidateAddressRequest)(nil), "rpc.ValidateAddressRequest")
	proto.RegisterType((*ValidateAddressReply)(nil), "rpc.ValidateAddressReply")
	proto.RegisterType((*WithdrawRequest)(nil), "rpc.WithdrawRequest")
	proto.RegisterType((*WithdrawReply)(nil), "rpc.WithdrawReply")
}

func init() { proto.RegisterFile("wallet.proto", fileDescriptor_b88fd140af4deb6f) }

var fileDescriptor_b88fd140af4deb6f = []byte{
	// 733 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x6f, 0x4f, 0xd3, 0x40,
	0x18, 0x67, 0x0c, 0xc6, 0xf6, 0x0c, 0x18, 0x1c, 0x63, 0xd6, 0xa2, 0x66, 0x39, 0x25, 0x59, 0xa2,
	0xd9, 0x0b, 0x4c, 0x48, 0x4c, 0x8c, 0xc9, 0x58, 0x1c, 0x21, 0x26, 0xc6, 0x14, 0x90, 0xb7, 0x96,
	0xf6, 0xd0, 0xc6, 0x71, 0xad, 0xed, 0x8d, 0xb1, 0x17, 0x7e, 0x16, 0x3f, 0x94, 0x5f, 0xc8, 0xdc,
	0xbf, 0xf6, 0xae, 0x9b, 0x23, 0xbc, 0xbb, 0xe7, 0xdf, 0xef, 0xf9, 0xd3, 0xe7, 0x7e, 0x57, 0xd8,
	0x9c, 0xfa, 0xe3, 0x31, 0x61, 0xfd, 0x24, 0x8d, 0x59, 0x8c, 0xaa, 0x69, 0x12, 0xe0, 0x8f, 0xb0,
	0x7f, 0x49, 0xb3, 0x84, 0x50, 0x76, 0xe2, 0x8f, 0x7d, 0x1a, 0x10, 0x8f, 0xfc, 0x9a, 0x90, 0x8c,
	0x21, 0x04, 0x6b, 0x41, 0x1c, 0x51, 0xa7, 0xd2, 0xad, 0xf4, 0x1a, 0x9e, 0x38, 0x23, 0x07, 0x36,
	0xfc, 0x30, 0x4c, 0x49, 0x96, 0x39, 0xab, 0xdd, 0x6a, 0xaf, 0xe1, 0x69, 0x11, 0x0f, 0x61, 0xaf,
	0x0c, 0x93, 0x8c, 0x67, 0xe8, 0x0d, 0xd4, 0x07, 0x41, 0x10, 0x4f, 0x28, 0xcb, 0x9c, 0x4a, 0xb7,
	0xda, 0x6b, 0x1e, 0xed, 0xf4, 0xd3, 0x24, 0xe8, 0x0f, 0xe3, 0x88, 0x2a, 0x83, 0x97, 0x7b, 0xe0,
	0x3f, 0x15, 0xd8, 0x1d, 0x4d, 0x68, 0x48, 0xc2, 0x73, 0x42, 0xc3, 0x65, 0x85, 0x74, 0xa1, 0x79,
	0x93, 0xc6, 0xb7, 0x83, 0xbc, 0x18, 0x6e, 0x32, 0x55, 0xe8, 0x19, 0x34, 0x58, 0xac, 0xed, 0x55,
	0x61, 0x2f, 0x14, 0xa8, 0x03, 0x35, 0xff, 0x96, 0x27, 0x75, 0xd6, 0x84, 0x49, 0x49, 0xe8, 0x05,
	0xc0, 0x0d, 0x21, 0x3a, 0x6c, 0x5d, 0xd8, 0x0c, 0x0d, 0x3e, 0x84, 0x96, 0x59, 0x20, 0x6f, 0x11,
	0xc1, 0x1a, 0xbb, 0x3f, 0x0b, 0x75, 0x79, 0xfc, 0xcc, 0xdd, 0x86, 0x93, 0x34, 0x25, 0x34, 0x98,
	0x19, 0x5d, 0x50, 0xff, 0x96, 0x68, 0x37, 0x7e, 0xc6, 0x87, 0xb0, 0x55, 0xb8, 0x71, 0xac, 0x36,
	0xac, 0x27, 0x69, 0x14, 0x48, 0xaf, 0x8a, 0x27, 0x05, 0x8e, 0x76, 0x99, 0x85, 0x5f, 0xf8, 0x79,
	0xc9, 0x4c, 0x38, 0x5a, 0xe1, 0x66, 0xa1, 0xad, 0x9a, 0x68, 0x3d, 0x40, 0x9f, 0x09, 0x9b, 0xc6,
	0xe9, 0xcf, 0x33, 0x7a, 0x13, 0x2f, 0x03, 0xfc, 0x06, 0x3b, 0x96, 0x27, 0xc7, 0x74, 0x60, 0xe3,
	0x8e, 0xa4, 0x59, 0x14, 0x6b, 0x57, 0x2d, 0x8a, 0x91, 0x06, 0x2c, 0xba, 0x93, 0xe9, 0xea, 0x9e,
	0x92, 0x90, 0x0b, 0xf5, 0xa9, 0x9f, 0xd2, 0x88, 0x7e, 0xd7, 0xdf, 0x21, 0x97, 0x71, 0x1f, 0x1c,
	0xf5, 0xf1, 0x07, 0x34, 0x7c, 0x78, 0xff, 0xf0, 0x08, 0x3a, 0x0b, 0xfc, 0x1f, 0xbf, 0x68, 0x03,
	0x68, 0x1a, 0x06, 0x73, 0xad, 0x55, 0x53, 0x4a, 0xe4, 0x96, 0x6b, 0x99, 0x46, 0x0d, 0x51, 0x8b,
	0xf8, 0x03, 0x6c, 0x3f, 0xf6, 0xc2, 0x98, 0xc8, 0xb8, 0x07, 0x9b, 0x56, 0x03, 0x46, 0xa6, 0x8a,
	0x9d, 0xe9, 0x10, 0x5a, 0xba, 0xf0, 0x65, 0xb3, 0x79, 0x0d, 0x5b, 0x85, 0x1b, 0x47, 0x74, 0xa1,
	0xee, 0x9b, 0x23, 0x69, 0x78, 0xb9, 0x8c, 0x5f, 0xc1, 0xb6, 0x5a, 0x69, 0x03, 0x72, 0x68, 0x40,
	0xf2, 0x33, 0xaf, 0x31, 0xf7, 0x52, 0x35, 0x0e, 0xec, 0x39, 0xe9, 0x7b, 0x31, 0x82, 0xce, 0x57,
	0x7f, 0x1c, 0x85, 0x3e, 0x23, 0x0f, 0xe3, 0x9a, 0x38, 0xab, 0x36, 0x4e, 0x1f, 0xda, 0x73, 0x38,
	0x3c, 0x73, 0x07, 0x6a, 0xe7, 0xcc, 0x67, 0x13, 0x99, 0xb8, 0xee, 0x29, 0x09, 0xff, 0x86, 0xd6,
	0x55, 0xc4, 0x7e, 0x84, 0xa9, 0x3f, 0x5d, 0x96, 0xb0, 0x03, 0xb5, 0x81, 0xbc, 0xee, 0xf2, 0x2b,
	0x2a, 0x89, 0xd3, 0xc8, 0xc8, 0xa0, 0x11, 0xb9, 0x9e, 0xa6, 0x8a, 0xd3, 0xc8, 0x45, 0x4e, 0x23,
	0x92, 0x2b, 0x0a, 0x05, 0x7e, 0x09, 0x5b, 0x45, 0x7a, 0x45, 0x06, 0x17, 0xf7, 0x51, 0x4e, 0x06,
	0xfc, 0x7c, 0xf4, 0x77, 0x1d, 0x6a, 0x57, 0x82, 0x77, 0xd1, 0x31, 0xc0, 0x29, 0x61, 0x1a, 0x7b,
	0x4f, 0x6c, 0xa8, 0x3d, 0x2f, 0x77, 0xd7, 0x56, 0x26, 0xe3, 0x19, 0x5e, 0x41, 0x9f, 0xa0, 0x55,
	0x1a, 0x0b, 0x3a, 0x10, 0x7e, 0x8b, 0x87, 0xee, 0x3e, 0x5d, 0x6c, 0x94, 0x60, 0xc7, 0x50, 0xd7,
	0x45, 0xa3, 0xb6, 0x70, 0x2c, 0x8d, 0xd0, 0x45, 0x25, 0xad, 0x8c, 0x7b, 0x07, 0x4d, 0x5e, 0xbc,
	0x5a, 0x21, 0x15, 0x5a, 0xda, 0x4c, 0x15, 0x6a, 0x2d, 0xa2, 0x48, 0xc9, 0xfb, 0x56, 0xfb, 0xae,
	0xfa, 0xb6, 0x6f, 0x8f, 0xea, 0xdb, 0xbc, 0x12, 0x78, 0x05, 0x5d, 0x40, 0xbb, 0x48, 0x59, 0x5c,
	0x79, 0xf4, 0xdc, 0xcc, 0x32, 0x47, 0x1d, 0xee, 0xc1, 0xff, 0xcc, 0x12, 0xf5, 0x04, 0xb6, 0x4f,
	0x09, 0x33, 0xa8, 0x0d, 0x3d, 0x11, 0x01, 0xf3, 0xb4, 0xe8, 0xee, 0xcf, 0x1b, 0xcc, 0x61, 0x68,
	0xbe, 0x55, 0xc3, 0x28, 0xb1, 0xb4, 0x1a, 0x86, 0x45, 0xca, 0x79, 0xa8, 0x26, 0x7e, 0x15, 0x5a,
	0x7a, 0x2e, 0x54, 0xa8, 0xf5, 0x3a, 0xe0, 0x15, 0xf4, 0x1e, 0xa0, 0x78, 0x7e, 0x50, 0x47, 0xf8,
	0xcc, 0x3d, 0x98, 0x6e, 0x7b, 0x4e, 0xaf, 0xb7, 0x68, 0x97, 0xd7, 0x6c, 0x3d, 0xd3, 0xc8, 0x95,
	0x35, 0x2e, 0xfa, 0x05, 0x70, 0x9d, 0x85, 0x36, 0x01, 0x76, 0x5d, 0x13, 0xff, 0x10, 0x6f, 0xff,
	0x05, 0x00, 0x00, 0xff, 0xff, 0xd0, 0xd7, 0xe1, 0xd3, 0x53, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WalletClient is the client API for Wallet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletClient interface {
	//获取地址
	GetAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AddressReply, error)
	//验证地址
	ValidateAddress(ctx context.Context, in *ValidateAddressRequest, opts ...grpc.CallOption) (*ValidateAddressReply, error)
	//提现
	Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawReply, error)
	//获取账户
	GetAccounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*AccountsReply, error)
	//获取余额
	GetBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceReply, error)
	//获取账户和余额
	GetAccountAndBalance(ctx context.Context, in *AccountAndBalanceRequest, opts ...grpc.CallOption) (*AccountAndBalanceReply, error)
	//获取网络状态
	GetNetworkInfo(ctx context.Context, in *NetworkInfoRequest, opts ...grpc.CallOption) (*NetworkInfoReply, error)
	//获取美元价格
	GetUsdPrice(ctx context.Context, in *UsdPriceRequest, opts ...grpc.CallOption) (*UsdPriceReply, error)
	//获取货币价格
	GetCurrency(ctx context.Context, in *CurrencyRequest, opts ...grpc.CallOption) (*CurrencyReply, error)
	//从指定手结费地址发送交易
	FundedSend(ctx context.Context, in *FundedSendRequest, opts ...grpc.CallOption) (*FundedSendReply, error)
	//获取未花费的地址及余额
	GetUnspentBalance(ctx context.Context, in *UnspentBalanceRequest, opts ...grpc.CallOption) (*UnspentBalanceReply, error)
}

type walletClient struct {
	cc *grpc.ClientConn
}

func NewWalletClient(cc *grpc.ClientConn) WalletClient {
	return &walletClient{cc}
}

func (c *walletClient) GetAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AddressReply, error) {
	out := new(AddressReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/GetAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) ValidateAddress(ctx context.Context, in *ValidateAddressRequest, opts ...grpc.CallOption) (*ValidateAddressReply, error) {
	out := new(ValidateAddressReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/ValidateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawReply, error) {
	out := new(WithdrawReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) GetAccounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*AccountsReply, error) {
	out := new(AccountsReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/GetAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) GetBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceReply, error) {
	out := new(BalanceReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) GetAccountAndBalance(ctx context.Context, in *AccountAndBalanceRequest, opts ...grpc.CallOption) (*AccountAndBalanceReply, error) {
	out := new(AccountAndBalanceReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/GetAccountAndBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) GetNetworkInfo(ctx context.Context, in *NetworkInfoRequest, opts ...grpc.CallOption) (*NetworkInfoReply, error) {
	out := new(NetworkInfoReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/GetNetworkInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) GetUsdPrice(ctx context.Context, in *UsdPriceRequest, opts ...grpc.CallOption) (*UsdPriceReply, error) {
	out := new(UsdPriceReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/GetUsdPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) GetCurrency(ctx context.Context, in *CurrencyRequest, opts ...grpc.CallOption) (*CurrencyReply, error) {
	out := new(CurrencyReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/GetCurrency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) FundedSend(ctx context.Context, in *FundedSendRequest, opts ...grpc.CallOption) (*FundedSendReply, error) {
	out := new(FundedSendReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/FundedSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) GetUnspentBalance(ctx context.Context, in *UnspentBalanceRequest, opts ...grpc.CallOption) (*UnspentBalanceReply, error) {
	out := new(UnspentBalanceReply)
	err := c.cc.Invoke(ctx, "/rpc.Wallet/GetUnspentBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServer is the server API for Wallet service.
type WalletServer interface {
	//获取地址
	GetAddress(context.Context, *AddressRequest) (*AddressReply, error)
	//验证地址
	ValidateAddress(context.Context, *ValidateAddressRequest) (*ValidateAddressReply, error)
	//提现
	Withdraw(context.Context, *WithdrawRequest) (*WithdrawReply, error)
	//获取账户
	GetAccounts(context.Context, *AccountsRequest) (*AccountsReply, error)
	//获取余额
	GetBalance(context.Context, *BalanceRequest) (*BalanceReply, error)
	//获取账户和余额
	GetAccountAndBalance(context.Context, *AccountAndBalanceRequest) (*AccountAndBalanceReply, error)
	//获取网络状态
	GetNetworkInfo(context.Context, *NetworkInfoRequest) (*NetworkInfoReply, error)
	//获取美元价格
	GetUsdPrice(context.Context, *UsdPriceRequest) (*UsdPriceReply, error)
	//获取货币价格
	GetCurrency(context.Context, *CurrencyRequest) (*CurrencyReply, error)
	//从指定手结费地址发送交易
	FundedSend(context.Context, *FundedSendRequest) (*FundedSendReply, error)
	//获取未花费的地址及余额
	GetUnspentBalance(context.Context, *UnspentBalanceRequest) (*UnspentBalanceReply, error)
}

// UnimplementedWalletServer can be embedded to have forward compatible implementations.
type UnimplementedWalletServer struct {
}

func (*UnimplementedWalletServer) GetAddress(ctx context.Context, req *AddressRequest) (*AddressReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddress not implemented")
}
func (*UnimplementedWalletServer) ValidateAddress(ctx context.Context, req *ValidateAddressRequest) (*ValidateAddressReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateAddress not implemented")
}
func (*UnimplementedWalletServer) Withdraw(ctx context.Context, req *WithdrawRequest) (*WithdrawReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Withdraw not implemented")
}
func (*UnimplementedWalletServer) GetAccounts(ctx context.Context, req *AccountsRequest) (*AccountsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccounts not implemented")
}
func (*UnimplementedWalletServer) GetBalance(ctx context.Context, req *BalanceRequest) (*BalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedWalletServer) GetAccountAndBalance(ctx context.Context, req *AccountAndBalanceRequest) (*AccountAndBalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountAndBalance not implemented")
}
func (*UnimplementedWalletServer) GetNetworkInfo(ctx context.Context, req *NetworkInfoRequest) (*NetworkInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNetworkInfo not implemented")
}
func (*UnimplementedWalletServer) GetUsdPrice(ctx context.Context, req *UsdPriceRequest) (*UsdPriceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsdPrice not implemented")
}
func (*UnimplementedWalletServer) GetCurrency(ctx context.Context, req *CurrencyRequest) (*CurrencyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrency not implemented")
}
func (*UnimplementedWalletServer) FundedSend(ctx context.Context, req *FundedSendRequest) (*FundedSendReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FundedSend not implemented")
}
func (*UnimplementedWalletServer) GetUnspentBalance(ctx context.Context, req *UnspentBalanceRequest) (*UnspentBalanceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUnspentBalance not implemented")
}

func RegisterWalletServer(s *grpc.Server, srv WalletServer) {
	s.RegisterService(&_Wallet_serviceDesc, srv)
}

func _Wallet_GetAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/GetAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetAddress(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_ValidateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).ValidateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/ValidateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).ValidateAddress(ctx, req.(*ValidateAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).Withdraw(ctx, req.(*WithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_GetAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/GetAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetAccounts(ctx, req.(*AccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetBalance(ctx, req.(*BalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_GetAccountAndBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountAndBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetAccountAndBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/GetAccountAndBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetAccountAndBalance(ctx, req.(*AccountAndBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_GetNetworkInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetNetworkInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/GetNetworkInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetNetworkInfo(ctx, req.(*NetworkInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_GetUsdPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsdPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetUsdPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/GetUsdPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetUsdPrice(ctx, req.(*UsdPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_GetCurrency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CurrencyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetCurrency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/GetCurrency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetCurrency(ctx, req.(*CurrencyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_FundedSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FundedSendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).FundedSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/FundedSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).FundedSend(ctx, req.(*FundedSendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_GetUnspentBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnspentBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetUnspentBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Wallet/GetUnspentBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetUnspentBalance(ctx, req.(*UnspentBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Wallet",
	HandlerType: (*WalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAddress",
			Handler:    _Wallet_GetAddress_Handler,
		},
		{
			MethodName: "ValidateAddress",
			Handler:    _Wallet_ValidateAddress_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _Wallet_Withdraw_Handler,
		},
		{
			MethodName: "GetAccounts",
			Handler:    _Wallet_GetAccounts_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _Wallet_GetBalance_Handler,
		},
		{
			MethodName: "GetAccountAndBalance",
			Handler:    _Wallet_GetAccountAndBalance_Handler,
		},
		{
			MethodName: "GetNetworkInfo",
			Handler:    _Wallet_GetNetworkInfo_Handler,
		},
		{
			MethodName: "GetUsdPrice",
			Handler:    _Wallet_GetUsdPrice_Handler,
		},
		{
			MethodName: "GetCurrency",
			Handler:    _Wallet_GetCurrency_Handler,
		},
		{
			MethodName: "FundedSend",
			Handler:    _Wallet_FundedSend_Handler,
		},
		{
			MethodName: "GetUnspentBalance",
			Handler:    _Wallet_GetUnspentBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wallet.proto",
}
